// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchPage Component should match snapshot with when errorMessage is true and isLoading is false 1`] = `
<React.Fragment>
  <Connect(Header) />
  <section
    className="content"
  >
    <SearchForm
      fetchRepoDetails={[MockFunction]}
    />
    <summary
      className="search-content"
    >
      <p>
        Error : true
      </p>
    </summary>
  </section>
</React.Fragment>
`;

exports[`SearchPage Component should match snapshot with when isLoading is true 1`] = `
<React.Fragment>
  <Connect(Header) />
  <section
    className="content"
  >
    <SearchForm
      fetchRepoDetails={[MockFunction]}
    />
    <summary
      className="search-content"
    >
      <Loading
        className="search-spinner"
        color="black"
        delay={0}
        height={64}
        type="spinningBubbles"
        width={64}
      />
    </summary>
  </section>
</React.Fragment>
`;

exports[`SearchPage Component should match snapshot with when search history and result is not present 1`] = `
<React.Fragment>
  <Connect(Header) />
  <section
    className="content"
  >
    <SearchForm
      fetchRepoDetails={[MockFunction]}
    />
    <summary
      className="search-content"
    />
  </section>
</React.Fragment>
`;

exports[`SearchPage Component should match snapshot with when search history is present 1`] = `
<React.Fragment>
  <Connect(Header) />
  <section
    className="content"
  >
    <SearchForm
      fetchRepoDetails={[MockFunction]}
    />
    <summary
      className="search-content"
    >
      <SearchHistory
        fetchSearchHistory={[MockFunction]}
        history={
          Array [
            "dummyHistory",
          ]
        }
      />
    </summary>
  </section>
</React.Fragment>
`;

exports[`SearchPage Component should match snapshot with when search result is present 1`] = `
<React.Fragment>
  <Connect(Header) />
  <section
    className="content"
  >
    <SearchForm
      fetchRepoDetails={[MockFunction]}
    />
    <summary
      className="search-content"
    >
      <PureComponent
        addToSearchHistory={[MockFunction]}
        result={
          Object {
            "items": Array [
              "dummyItems",
            ],
          }
        }
      />
    </summary>
  </section>
</React.Fragment>
`;
